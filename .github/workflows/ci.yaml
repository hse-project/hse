name: CI

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened, edited]

env:
  MESON_TESTTHREADS: 1

jobs:
  ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        build_type: [release, debugoptimized]

    steps:
    - name: Setup system
      run: |
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        sudo apt-get update
        sudo apt-get install build-essential libbsd-dev pkg-config openjdk-8-jdk libmicrohttpd-dev liburcu-dev libyaml-dev liblz4-dev libcurl4-openssl-dev python3-setuptools
        sudo apt-get install libmongoc-1.0-0 libbson-1.0-0 libssl-dev libsasl2-dev
        python3 -m pip install --user setuptools_rust
        python3 -m pip install --user poetry

    - uses: actions/checkout@v2

    - name: Setup Python environment
      run: |
        poetry install

    - name: Build
      run: |
        poetry run meson builddir -Dbuildtype=${{ matrix.build_type }} --fatal-meson-warnings -Dycsb=true -Dwerror=true

    - name: Test
      run: |
        poetry run meson test -C builddir --setup=ci --print-errorlogs --no-stdsplit

    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: build-artifact-ubuntu-18.04-${{ matrix.build_type }}
        path: builddir/meson-logs/

  fedora:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
      options: --privileged  -v /usr/src:/usr/src -v /lib/modules:/lib/modules
    strategy:
      fail-fast: false
      matrix:
        build_type: [release, debugoptimized]

    steps:
    - name: Setup system
      run: |
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        sudo dnf install -y which git pkg-config java-1.8.0-openjdk-devel libmicrohttpd-devel userspace-rcu-devel libyaml-devel lz4-devel libbsd-devel libcurl-devel
        sudo dnf install -y xz mongo-c-driver libbson openssl-devel cyrus-sasl-devel ncurses-devel cmake make automake gcc gcc-c++ kernel-devel
        sudo dnf install -y python-pip python-wheel python3-devel libxml2-devel libxslt-devel
        python3 -m pip install --user poetry

    - uses: actions/checkout@v2

    - name: Setup Python environment
      run: |
        poetry install

    - name: Build
      run: |
        poetry run meson builddir -Dbuildtype=${{ matrix.build_type }} --fatal-meson-warnings -Dycsb=true -Dwerror=true

    - name: Test
      run: |
        poetry run meson test -C builddir --setup=ci --print-errorlogs --no-stdsplit

    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: build-artifact-fedora-latest-${{ matrix.build_type }}
        path: builddir/meson-logs/

  docs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    container:
      image: fedora:latest
      options: --privileged  -v /usr/src:/usr/src -v /lib/modules:/lib/modules

    steps:
    - uses: actions/checkout@v2

    - name: Initialize
      run: |
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        sudo dnf install -y which git poetry python-unversioned-command pkg-config java-1.8.0-openjdk-devel libmicrohttpd-devel userspace-rcu-devel libyaml-devel lz4-devel libbsd-devel libcurl-devel doxygen
        sudo dnf install -y xz mongo-c-driver libbson openssl-devel cyrus-sasl-devel ncurses-devel cmake make automake gcc gcc-c++ kernel-devel
        sudo dnf install -y python-pip python-wheel python3-devel libxml2-devel libxslt-devel

    - name: Setup
      run: |
        poetry install
        poetry run meson builddir --fatal-meson-warnings -Dwerror=true -Ddocs=true

    - name: Build
      run: |
        poetry run ninja -C builddir docs/doxygen/api

  asan-ubsan:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
      options: --privileged  -v /usr/src:/usr/src -v /lib/modules:/lib/modules
    strategy:
      fail-fast: false
      matrix:
        build_type: [release, debugoptimized]

    steps:
    - name: Setup system
      run: |
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        sudo dnf install -y which git pkg-config java-1.8.0-openjdk-devel libmicrohttpd-devel userspace-rcu-devel libyaml-devel lz4-devel libbsd-devel libcurl-devel
        sudo dnf install -y xz mongo-c-driver libbson openssl-devel cyrus-sasl-devel ncurses-devel cmake make automake gcc gcc-c++ kernel-devel
        sudo dnf install -y python-pip python-wheel python3-devel libxml2-devel libxslt-devel
        sudo dnf install -y libasan libubsan
        python3 -m pip install --user poetry

    - uses: actions/checkout@v2

    - name: Setup Python environment
      run: |
        poetry install

    - name: Build
      run: |
        poetry run meson builddir -Dbuildtype=${{ matrix.build_type }} --fatal-meson-warnings -Dycsb=true -Db_sanitize=address,undefined

    - name: Test
      run: |
        poetry run meson test -C builddir --setup=ci --print-errorlogs --no-stdsplit

    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: build-artifact-fedora-latest-${{ matrix.build_type }}
        path: builddir/meson-logs/

  checkoss:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: checkoss
      run: |
        scripts/dev/checkoss
