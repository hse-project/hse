name: CI

on:
  push:
    branches:
      - master
      - v2.*
  pull_request:
    types: [opened, synchronize, reopened]

env:
  MESON_TESTTHREADS: 1

jobs:
  ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        buildtype: [release, debug]

    steps:
      - name: Checkout HSE
        uses: actions/checkout@v2

      - name: Checkout hse-python
        uses: actions/checkout@v2
        with:
          repository: hse-project/hse-python
          path: subprojects/hse-python

      - name: Post-checkout
        run: |
          for b in hse-python; do
            git -C "subprojects/$b" checkout ${{ github.head_ref }} || true
          done

      - name: Initialize
        run: |
          sudo apt-get update
          sudo apt-get install build-essential ninja-build libbsd-dev pkg-config openjdk-8-jdk libmicrohttpd-dev liburcu-dev libyaml-dev liblz4-dev libcurl4-openssl-dev python3-setuptools
          sudo apt-get install libmongoc-1.0-0 libbson-1.0-0 libssl-dev libsasl2-dev
          sudo python3 -m pip install meson Cython

      - name: Setup
        run: |
          meson builddir -Dbuildtype=${{ matrix.buildtype }} --fatal-meson-warnings -Ddocs=disabled -Dbindings=all -Dycsb=true -Dwerror=true

      - name: Build
        run: |
          ninja -C builddir

      - name: Test
        run: |
          ulimit -c unlimited
          meson test -C builddir --setup=ci --print-errorlogs --no-stdsplit

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: build-artifact-${{ matrix.os }}-${{ matrix.build_type }}
          path: |
             builddir/meson-logs/
             /var/log/syslog

  fedora:
    runs-on: ubuntu-latest
    container:
      image: fedora:${{ matrix.image-tag }}
      options: --privileged  -v /usr/src:/usr/src -v /lib/modules:/lib/modules
    strategy:
      fail-fast: false
      matrix:
        image-tag: [35]
        buildtype: [release, debug]

    steps:
      - name: Checkout HSE
        uses: actions/checkout@v2

      - name: Checkout hse-python
        uses: actions/checkout@v2
        with:
          repository: hse-project/hse-python
          path: subprojects/hse-python

      - name: Post-checkout
        run: |
          for b in hse-python; do
            git -C "subprojects/$b" checkout ${{ github.head_ref }} || true
          done

      - name: Initialize
        run: |
          sudo dnf install -y git ninja-build meson python-unversioned-command pkg-config python3-Cython java-1.8.0-openjdk-devel libmicrohttpd-devel userspace-rcu-devel libyaml-devel lz4-devel libbsd-devel libcurl-devel libpmem-devel
          sudo dnf install -y xz mongo-c-driver libbson openssl-devel cyrus-sasl-devel ncurses-devel cmake make automake gcc gcc-c++ kernel-devel
          sudo dnf install -y python-pip python-wheel python3-devel libxml2-devel libxslt-devel

      - name: Setup
        run: |
          meson builddir -Dbuildtype=${{ matrix.buildtype }} --fatal-meson-warnings -Dpmem=enabled -Ddocs=disabled -Dbindings=all -Dycsb=true -Dwerror=true

      - name: Build
        run: |
          ninja -C builddir

      - name: Test
        run: |
          ulimit -c unlimited
          meson test -C builddir --setup=ci --print-errorlogs --no-stdsplit

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: build-artifact-fedora-${{ matrix.image-tag }}-${{ matrix.build_type }}
          path: |
            builddir/meson-logs/
            /var/log/messages

  almalinux:
    runs-on: ubuntu-latest
    container:
      image: almalinux:${{ matrix.image-tag }}
      options: --privileged  -v /usr/src:/usr/src -v /lib/modules:/lib/modules
    strategy:
      fail-fast: false
      matrix:
        image-tag: [8]
        buildtype: [release, debug]

    steps:
      - name: Checkout HSE
        uses: actions/checkout@v2

      - name: Checkout hse-python
        uses: actions/checkout@v2
        with:
          repository: hse-project/hse-python
          path: subprojects/hse-python

      - name: Post-checkout
        run: |
          for b in hse-python; do
            git -C "subprojects/$b" checkout ${{ github.head_ref }} || true
          done

      - name: Initialize
        run: |
          dnf install -y sudo dnf-plugins-core epel-release
          dnf config-manager --set-enabled powertools
          dnf install -y git ninja-build pkg-config java-1.8.0-openjdk-devel libmicrohttpd-devel userspace-rcu-devel libyaml-devel lz4-devel libbsd-devel libcurl-devel
          dnf install -y xz mongo-c-driver libbson openssl-devel cyrus-sasl-devel ncurses-devel cmake make automake gcc gcc-c++ kernel-devel
          dnf install -y python36 python3-devel libxml2 libxslt
          python3 -m pip install meson Cython

      - name: Setup
        run: |
          meson builddir -Dbuildtype=${{ matrix.buildtype }} --fatal-meson-warnings -Ddocs=disabled -Dbindings=all -Dycsb=true -Dwerror=true

      - name: Build
        run: |
          ninja -C builddir

      - name: Test
        run: |
          ulimit -c unlimited
          meson test -C builddir --setup=ci --print-errorlogs --no-stdsplit

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: build-artifact-almalinux-${{ matrix.image-tag }}-${{ matrix.build_type }}
          path: |
            builddir/meson-logs/
            /var/log/messages

  asan-ubsan:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
      options: --privileged  -v /usr/src:/usr/src -v /lib/modules:/lib/modules
    strategy:
      fail-fast: false
      matrix:
        buildtype: [release, debug]

    steps:
      - name: Checkout HSE
        uses: actions/checkout@v2

      - name: Checkout hse-python
        uses: actions/checkout@v2
        with:
          repository: hse-project/hse-python
          path: subprojects/hse-python

      - name: Post-checkout
        run: |
          for b in hse-python; do
            git -C "subprojects/$b" checkout ${{ github.head_ref }} || true
          done

      - name: Initialize
        run: |
          sudo dnf install -y git ninja-build meson python-unversioned-command pkg-config python3-Cython java-1.8.0-openjdk-devel libmicrohttpd-devel userspace-rcu-devel libyaml-devel lz4-devel libbsd-devel libcurl-devel
          sudo dnf install -y xz mongo-c-driver libbson openssl-devel cyrus-sasl-devel ncurses-devel cmake make automake gcc gcc-c++ kernel-devel
          sudo dnf install -y python3-devel libxml2-devel libxslt-devel
          sudo dnf install -y libasan libubsan

      - name: Setup
        run: |
          meson builddir -Dbuildtype=${{ matrix.buildtype }} --fatal-meson-warnings -Ddocs=disabled -Dbindings=all -Dycsb=true -Db_sanitize=address,undefined

      - name: Build
        run: |
          ninja -C builddir

      - name: Test
        run: |
          ulimit -c unlimited
          meson test -C builddir --setup=ci --print-errorlogs --no-stdsplit

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: build-artifact-fedora-latest-${{ matrix.build_type }}
          path: |
            builddir/meson-logs/
            /var/log/messages

  checkoss:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: checkoss
        run: |
          scripts/dev/checkoss.sh
